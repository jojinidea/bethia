package unsw.dungeon;

import java.util.ArrayList;

import javafx.scene.input.KeyCode;

public class Enemy extends Entity {
	
	private Dungeon dungeon;
	
	public Enemy(int x, int y, Dungeon dungeon) {
		super(x,y);
		this.dungeon = dungeon;
		setUseBehaviour(new UseUnuseable()); //TODO: does this make sense??, need obstacle behaviour
		setRemoveBehaviour(new RemoveEnemy(this));
		setCollectBehaviour(new CollectNonCollectible());
	}
	
	public void move(Direction direction, Dungeon dungeon) {
		ArrayList<Entity> entities = dungeon.search(this.nextMove(direction));
		
		for (Entity e: entities) {
			if (e.isObstacle(dungeon, this) == false) {
				// move & update coord
				
			}
		}
		
	}
	
	
	public Point nextMove(Direction direction) {
    	// gets the player's intended coordinate they want to move into
    	Point newCoordinate = null;
    	//System.out.println("Old Y coord is " + oldYCoord + " old X coord is " + oldXCoord);
    	switch (direction) {
    	case UP:
            newCoordinate = new Point(this.getX(), this.getY()-1);
            break;
        case DOWN:
            newCoordinate = new Point(this.getX(), this.getY()+1);
            System.out.println("NEW COORD UPDATE + " + newCoordinate);
            break;
        case LEFT:
        	newCoordinate = new Point(this.getX()-1, this.getY());
            break;
        case RIGHT:
        	newCoordinate = new Point(this.getX()+1, this.getY());
            break;
		default:
			break;
    	}
    return newCoordinate;
    }

}
